LookUp <- data.frame(Tube = c(paste0("A", 1:12), paste0("B", 1:3), paste0("D", 1:12),
paste0("E", 1:12), paste0("F", 1:12), paste0("G", 1:12),
paste0("H", 1:12)),
Person = c(rep("P1", 3), rep("P2", 3), rep("P3", 3),
rep("P4", 3), rep("P5",3),
rep("P1", 12), rep("P2", 12),
rep("P3", 12), rep("P4", 12),
rep("P5", 12)))
DFList <- list()
for (i in 1:length(files)){
DF <- readRDS(file = file.path(savepath, files[i]))
DF <- DF[["res_DF"]]
DF$Person <- LookUp$Person[match(DF$`TUBE NAME`, LookUp$Tube)]
DF$Tester <- "Sandra"
DFList[[i]] <- DF
}
DF <- do.call("rbind", DFList)
DF <- DF[!is.na(DF$Person),]
DF <- DF[!grepl("A", DF$`TUBE NAME`), ]
DF$DilFac_Total <- round(DF$DilFac_Total)
DF$DilFac_Total <- factor(DF$DilFac_Total, levels = unique(DF$DilFac_Total), ordered = T)
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person)
Tr
savepath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Result_rds_files/20190118_Pretest/"
files <- list.files(savepath)
LookUp <- data.frame(Tube = c(paste0("A", 1:12), paste0("B", 1:3), paste0("D", 1:12),
paste0("E", 1:12), paste0("F", 1:12), paste0("G", 1:12),
paste0("H", 1:12)),
Person = c(rep("P1", 3), rep("P2", 3), rep("P3", 3),
rep("P4", 3), rep("P5",3),
rep("P1", 12), rep("P2", 12),
rep("P3", 12), rep("P4", 12),
rep("P5", 12)))
DFList <- list()
for (i in 1:length(files)){
DF <- readRDS(file = file.path(savepath, files[i]))
DF <- DF[["res_DF"]]
DF$Person <- LookUp$Person[match(DF$`TUBE NAME`, LookUp$Tube)]
DF$Tester <- "Sandra"
DFList[[i]] <- DF
}
DF <- do.call("rbind", DFList)
DF <- DF[!is.na(DF$Person),]
DF <- DF[!grepl("A|B", DF$`TUBE NAME`), ]
DF$DilFac_Total <- round(DF$DilFac_Total)
DF$DilFac_Total <- factor(DF$DilFac_Total, levels = unique(DF$DilFac_Total), ordered = T)
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person)
Tr
functionpath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Functions_FC"
function_file <- "20190103_FlowCytometry_Functions.R"
pal(cbPalette)
source(file.path(functionpath, function_file))
pal(cbPalette)
rm(list = ls())
## MASS is for the 2D kernel function for density coloring <https://slowkow.com/notes/ggplot2-color-by-density/>
# library(MASS)
## flowCore:
# biocLite("BiocUpgrade")
# source("https://bioconductor.org/biocLite.R")
# biocLite("flowCore")
library(flowCore); #packageVersion("flowCore")
## ggcyto: for the gating set functions and some plot options
# source("https://bioconductor.org/biocLite.R")
# biocLite("ggcyto")
library(ggcyto); #packageVersion("ggcyto")
## ggplot2
library(ggplot2); #packageVersion("ggplot2")
## dplyr
library(dplyr); #packageVersion("dplyr")
## dplyr
library(tidyr); #packageVersion("tidyr")
## lubridate
library(lubridate)
## gridExtra for grid.arrange
library(gridExtra)
## viridis is just for colors
library(viridis)
# - define the path to your function file -
functionpath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Functions_FC"
function_file <- "20190103_FlowCytometry_Functions.R"
# --
# - define the path to the data you want to analyse -
datapath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Data/20190118_TestLiwei_200x"
# --
# - gating Thresholds and Polygons -
# -- for the area gate --
FSC.A.low <- 0.5
FSC.A.high <- Inf
SSC.A.low <- 0.5
SSC.A.high <- Inf
# ----
# -- for gating on Pacific Blue-A FSC-A --
Poly <- data.frame(x = c(100, 15000, 15000, 2000, 800, 200), y = c(100, 100, 25000, 25000, 7000, 800))
# ----
# -- for gating on PE-A FSC-A for the beads --
Poly_Beads <- data.frame(x = c(20000, 260000, 260000, 20000), y = c(30000, 30000, 260000, 260000))
# ----
# -- for gating on PE-A Pacific Blue-A for the beads --
Poly_Beads2 <- data.frame(x = c(20000, 260000, 260000, 20000), y = c(30000, 30000, 260000, 260000))
# ----
# --
# - plotting parameters -
bins <- 300 # defines how "fine" the FC.geom_hex plots will be, the higher the number of bins the more the plot looks like a geom_point plot (a la flowjo) but it's still faster
# --
# - IMPORTANT: Check carefully: Protocol and flow cytometer parameters used -
# -- protocol volumes and concentrations
muL_Buffer_per_mg_feces <- 10 # e.g. 10 when you add 1 ml to 100 mg feces
muL_supernatant <- 150 # the amount of supernatant used after the slow spin, NB: not needed for calculation but record it anyway
muL_resuspension <- 1500 # after the second wash
muL_Transfer1 <- 50
muL_Buffer_Transfer1 <- 950
muL_Transfer2 <- 170
muL_Stain <- 20 # used in Transfer 1
beads_concentration_permuL <- 1022 # in the bought bead tube
beads_volume_muL <- 10 # added in Transfer 2
# ----
# -- flow cytometer settings --
set_flow_rate_muL_s <- 0.5
# ----
# --
# - inputs for saving the data -
savepath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Result_rds_files"
savename <- NULL
# --
source(file.path(functionpath, function_file))
files <- list.files(datapath)
files <- files[grepl("*.fcs", files)]
fcsFileList <- lapply(file.path(datapath, files), read.FCS, transformation=FALSE)
# fcsFileList <- lapply(file.path(datapath, files), read.FCS, transformation=FALSE, column.pattern = "-W|-H", invert.pattern = TRUE)
names(fcsFileList) <- files
ParameterValuesList <- lapply(fcsFileList, extract_parameter_keywords_from_flowFrame)
# -- test that key parameters are identical --
ParameterValuesList_Restricted <- lapply(ParameterValuesList, function(DF){
DF <- DF[c("N", "R", "B", "E", "V", "G", "DISPLAY")]
rownames(DF) <- NULL
DF
})
if (length(unique(ParameterValuesList_Restricted)) == 1) {
PrintList <- ParameterValuesList[[1]]
} else {
PrintList <- ParameterValuesList
}
# --
PrintList
rm(list = ls())
rm(list = ls())
rm(list = ls())
functionpath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Functions_FC"
function_file <- "20190103_FlowCytometry_Functions.R"
source(file.path(functionpath, function_file))
savepath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Result_rds_files/20190118_Pretest/"
files <- list.files(savepath)
files
LookUp <- data.frame(Tube = c(paste0("A", 1:12), paste0("B", 1:3), paste0("D", 1:12),
paste0("E", 1:12), paste0("F", 1:12), paste0("G", 1:12),
paste0("H", 1:12)),
Person = c(rep("P1", 3), rep("P2", 3), rep("P3", 3),
rep("P4", 3), rep("P5",3),
rep("P1", 12), rep("P2", 12),
rep("P3", 12), rep("P4", 12),
rep("P5", 12)))
functionpath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Functions_FC"
function_file <- "20190103_FlowCytometry_Functions.R"
source(file.path(functionpath, function_file))
savepath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Result_rds_files/20190118_Pretest/"
files <- list.files(savepath)
LookUp <- data.frame(Tube = c(paste0("A", 1:12), paste0("B", 1:3), paste0("D", 1:12),
paste0("E", 1:12), paste0("F", 1:12), paste0("G", 1:12),
paste0("H", 1:12)),
Person = c(rep("P1", 3), rep("P2", 3), rep("P3", 3),
rep("P4", 3), rep("P5",3),
rep("P1", 12), rep("P2", 12),
rep("P3", 12), rep("P4", 12),
rep("P5", 12)))
DFList <- list()
for (i in 1:length(files)){
DF <- readRDS(file = file.path(savepath, files[i]))
DF <- DF[["res_DF"]]
DF$Person <- LookUp$Person[match(DF$`TUBE NAME`, LookUp$Tube)]
if (i < 3){
DF$Tester <- "Sandra"
} else {
DF$Tester <- "Liwei"
}
DFList[[i]] <- DF
}
DF <- do.call("rbind", DFList)
DF <- DF[!is.na(DF$Person),]
DF <- DF[!grepl("A|B", DF$`TUBE NAME`), ]
DF$DilFac_Total <- round(DF$DilFac_Total)
DF$DilFac_Total <- factor(DF$DilFac_Total, levels = unique(DF$DilFac_Total), ordered = T)
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person)
Tr
rm(list = ls())
source('~/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/20190120_Analysis20190118.R', echo=TRUE)
Tr
rm(list = ls())
source('~/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/20190120_Analysis20190118.R', echo=TRUE)
Tr
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjustj = 0.5, hjust = 1))
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
Tr
pal(cbPalette)
DF$Person
names(person_colors) <- levels(DF$Person)
person_colors <- c(cbPalette[2:4], cbPalette[7:8])
names(person_colors) <- levels(DF$Person)
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
Tr
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
scale_color_manual("", values = person_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
Tr
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
scale_color_manual("", values = person_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr
library(ggpubr)
rm(list = ls())
source('~/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/20190120_Analysis20190118.R', echo=TRUE)
Tr
DF$DilFac_Total
rm(list = ls())
library(ggpubr)
functionpath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Functions_FC"
function_file <- "20190103_FlowCytometry_Functions.R"
source(file.path(functionpath, function_file))
savepath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Result_rds_files/20190118_Pretest/"
files <- list.files(savepath)
LookUp <- data.frame(Tube = c(paste0("A", 1:12), paste0("B", 1:3), paste0("D", 1:12),
paste0("E", 1:12), paste0("F", 1:12), paste0("G", 1:12),
paste0("H", 1:12)),
Person = c(rep("P1", 3), rep("P2", 3), rep("P3", 3),
rep("P4", 3), rep("P5",3),
rep("P1", 12), rep("P2", 12),
rep("P3", 12), rep("P4", 12),
rep("P5", 12)))
DFList <- list()
for (i in 1:length(files)){
DF <- readRDS(file = file.path(savepath, files[i]))
DF <- DF[["res_DF"]]
DF$Person <- LookUp$Person[match(DF$`TUBE NAME`, LookUp$Tube)]
if (i < 4){
DF$Tester <- "Sandra"
} else {
DF$Tester <- "Liwei"
}
DFList[[i]] <- DF
}
DF <- do.call("rbind", DFList)
DF <- DF[!is.na(DF$Person),]
DF <- DF[!grepl("A|B", DF$`TUBE NAME`), ]
DF$DilFac_Total <- paste0(round(DF$DilFac_Total), "x")
DF$DilFac_Total <- factor(DF$DilFac_Total, levels = unique(DF$DilFac_Total), ordered = T)
person_colors <- c(cbPalette[2:4], cbPalette[7:8])
names(person_colors) <- levels(DF$Person)
DF$Tester <- factor(DF$Tester, levels = c("Sandra", "Liwei"), ordered = T)
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
scale_color_manual("", values = person_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr
Tr <- Tr + ggpubr::stat_compare_means(ref.group = "2353x", label = "p.signif", method = "t.test", hide.ns = TRUE)
Tr
?stat_compare_means
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
scale_color_manual("", values = person_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr
Tr <- Tr + stat_compare_means(method = "t.test", label = "p.signif", list(cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns")), hide.ns = FALSE)
Tr <- Tr + stat_compare_means(aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person), method = "t.test", label = "p.signif", list(cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns")), hide.ns = FALSE)
Tr <- Tr + stat_compare_means(aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person), data = DF, method = "t.test", label = "p.signif", list(cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns")), hide.ns = FALSE)
Tr
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
scale_color_manual("", values = person_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr
Tr <- Tr + stat_compare_means(ref.group = "3529x", method = "t.test", label = "p.signif", list(cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns")), hide.ns = FALSE)
rm(list = ls)
rm(list = ls)
rm(list = ls)
rm(list = ls())
source('~/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/20190120_Analysis20190118.R', echo=TRUE)
Tr
rm(list = ls())
source('~/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/20190120_Analysis20190118.R', echo=TRUE)
Tr
tester_colors <- c(cbPalette[2], cbPalette[4])
tester_colors <- c("Sandra", "Liwei")
Tr1 <- ggplot(DF, aes(x = Tester, y = Cells_per_g_feces_mean_e10, col = Tester))
Tr1 <- ggplot(DF, aes(x = Tester, y = Cells_per_g_feces_mean_e10, col = Tester))
Tr1 +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(DilFac_Total ~ Person) +
theme_bw() +
scale_color_manual("", values = tester_colors) +
xlab("")
DF$Tester
tester_colors <- c(cbPalette[2], cbPalette[4])
tester_colors <- c("Sandra", "Liwei")
tester_colors
Tr1 <- ggplot(DF, aes(x = Tester, y = Cells_per_g_feces_mean_e10, col = Tester))
Tr1 +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(DilFac_Total ~ Person)
tester_colors <- c(cbPalette[2], cbPalette[4])
tester_colors <- c("Sandra", "Liwei")
Tr1 <- ggplot(DF, aes(x = Tester, y = Cells_per_g_feces_mean_e10, col = Tester))
Tr1 +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(DilFac_Total ~ Person) +
theme_bw() +
scale_color_manual("", values = tester_colors) +
xlab("")
tester_colors <- c(cbPalette[2], cbPalette[4])
names(tester_colors) <- c("Sandra", "Liwei")
Tr1 <- ggplot(DF, aes(x = Tester, y = Cells_per_g_feces_mean_e10, col = Tester))
Tr1 <- Tr1 +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(DilFac_Total ~ Person) +
theme_bw() +
scale_color_manual("", values = tester_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr1
Tr1 <- Tr1 + stat_compare_means()
Tr1
Tr1 <- Tr1 + stat_compare_means(method = "t.test", label = "p.signif")
Tr1
Tr1 <- ggplot(DF, aes(x = Tester, y = Cells_per_g_feces_mean_e10, col = Tester))
Tr1 <- Tr1 +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(DilFac_Total ~ Person) +
theme_bw() +
scale_color_manual("", values = tester_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr1 <- Tr1 + stat_compare_means(method = "t.test", label = "p.signif")
Tr1
Tr1 <- ggplot(DF, aes(x = Tester, y = Cells_per_g_feces_mean_e10, col = Tester))
Tr1 <- Tr1 +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(DilFac_Total ~ Person) +
theme_bw() +
scale_color_manual("", values = tester_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr1 <- Tr1 + stat_compare_means(method = "t.test", label = "p.signif", hide.ns = TRUE, ref.group = "Sandra")
Tr1
pdf(file = "comparison_Liwei_Sandra.pdf", width = 8, height = 7)
Tr1
dev.off(0)
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
scale_color_manual("", values = person_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr
Tr <- Tr + stat_compare_means(method = "t.test", label = "p.signif", hide.ns = TRUE)
Tr
warnings()
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
scale_color_manual("", values = person_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr
rm(list = ls())
library(ggpubr)
functionpath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Functions_FC"
function_file <- "20190103_FlowCytometry_Functions.R"
source(file.path(functionpath, function_file))
savepath <- "/Users/jvb740/MarieCurie_Work/CellCounting_TaskForce/FlowCytometryAnalysis/Result_rds_files/20190118_Pretest/"
files <- list.files(savepath)
LookUp <- data.frame(Tube = c(paste0("A", 1:12), paste0("B", 1:3), paste0("D", 1:12),
paste0("E", 1:12), paste0("F", 1:12), paste0("G", 1:12),
paste0("H", 1:12)),
Person = c(rep("P1", 3), rep("P2", 3), rep("P3", 3),
rep("P4", 3), rep("P5",3),
rep("P1", 12), rep("P2", 12),
rep("P3", 12), rep("P4", 12),
rep("P5", 12)))
DFList <- list()
for (i in 1:length(files)){
DF <- readRDS(file = file.path(savepath, files[i]))
DF <- DF[["res_DF"]]
DF$Person <- LookUp$Person[match(DF$`TUBE NAME`, LookUp$Tube)]
if (i < 4){
DF$Tester <- "Sandra"
} else {
DF$Tester <- "Liwei"
}
DFList[[i]] <- DF
}
DF <- do.call("rbind", DFList)
DF <- DF[!is.na(DF$Person),]
DF <- DF[!grepl("A|B", DF$`TUBE NAME`), ]
DF$DilFac_Total <- paste0(round(DF$DilFac_Total), "x")
DF$DilFac_Total <- factor(DF$DilFac_Total, levels = unique(DF$DilFac_Total), ordered = F)
person_colors <- c(cbPalette[2:4], cbPalette[7:8])
names(person_colors) <- levels(DF$Person)
DF$Tester <- factor(DF$Tester, levels = c("Sandra", "Liwei"), ordered = T)
Tr <- ggplot(DF, aes(x = DilFac_Total, y = Cells_per_g_feces_mean_e10, col = Person))
Tr <- Tr +
geom_boxplot(outlier.color = NA) +
geom_jitter(width = 0.2, height = 0) +
facet_grid(Tester ~ Person) +
theme_bw() +
scale_color_manual("", values = person_colors) +
xlab("") +
ylab("Cells [x10^10 per g feces]") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.position = "none")
Tr
